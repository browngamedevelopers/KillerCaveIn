<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBox</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialization

grav = 1.0; 
hsp = 0; 
vsp = 0; 
jumpSpeed = 16; 
moveSpeed = 5;
maxfallspeed = 20;
depth = -20;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement

// Get input 
player_state = (global.game_state == 0);
kLeft = ((keyboard_check(vk_left) || keyboard_check(ord('A'))) &amp;&amp; player_state); 
kRight = ((keyboard_check(vk_right) || keyboard_check(ord('D'))) &amp;&amp; player_state); 

// Use input 
move = -kLeft + kRight; 
hsp = move * moveSpeed; 
if (vsp &lt; maxfallspeed) { 
    vsp += grav;
};

// H Collisions 
if (place_meeting(x + hsp, y, objFloor)) { 
    while (!place_meeting(x + sign(hsp), y, objFloor)) { 
        x += sign(hsp); 
    } 
    hsp = 0; 
} 
x += hsp;

// Animation
if kRight {
    image_xscale = 1
    image_speed = 0.166
} else if kLeft {
    image_xscale = -1
    image_speed = 0.166
} else {
    image_speed = 0
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Interacting

player_state = (global.game_state == 0);
kInt = (keyboard_check(ord('E')) &amp;&amp; player_state);
kUp = (keyboard_check(ord('W')) &amp;&amp; player_state);

if (kInt) {
    inst_object = instance_place(x, y, objObject);
    inst_door = instance_place(x,y,objDoor);
    if inst_object != noone {
        with (inst_object) activated = true;
    } else if inst_door != noone {
        with (inst_door) activated = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEnemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(y &lt;= other.y - sprite_height/2){
    with(other){
        instance_destroy();
    }
}else{
    show_message("you lose");
    room_restart();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
